import { promises as fs } from 'node:fs'
import { dirname, join } from 'node:path'
import { fileURLToPath } from 'node:url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)
const root = join(__dirname, '../../..')

const tokensDir = join(root, 'packages', 'design-tokens', 'src')
const outCss = join(__dirname, '..', 'cpx-theme.css')

function extractColorVars(tokens) {
  const vars = {}
  const visit = (obj, path = []) => {
    Object.entries(obj).forEach(([k, v]) => {
      const next = [...path, k]
      if (v && typeof v === 'object' && 'value' in v) {
        const key = `--${next.join('-').toLowerCase()}`
        const value = typeof v.value === 'string' ? v.value : String(v.value)
        vars[key] = value
      } else if (v && typeof v === 'object') {
        visit(v, next)
      }
    })
  }
  visit(tokens)
  return vars
}

async function main() {
  const files = await fs.readdir(tokensDir)
  const allVars = {}
  for (const f of files) {
    if (!f.endsWith('.json')) continue
    const json = JSON.parse(await fs.readFile(join(tokensDir, f), 'utf8'))
    Object.assign(allVars, extractColorVars(json))
  }

  const lines = [
    '/* Generated by CPX from design tokens */',
    '@theme {',
    ...Object.entries(allVars).map(([k, v]) => `  ${k}: ${v};`),
    '}',
    '',
  ]
  await fs.writeFile(outCss, lines.join('\n'))
  console.log(`Wrote ${outCss}`)
}

main().catch((e) => {
  console.error(e)
  process.exit(1)
})


