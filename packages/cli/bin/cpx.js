#!/usr/bin/env node
/**
 * Minimal CPX CLI skeleton
 */

import { argv, cwd } from 'node:process'
import { readFile, writeFile, mkdir } from 'node:fs/promises'
import { existsSync } from 'node:fs'
import { join } from 'node:path'

function printHelp() {
  console.log(`cpx - Token-driven UI Kit CLI\n\n` +
    `Usage:\n` +
    `  npx @ckittipob/cpx init [--tw3] [--storybook]\n` +
    `  npx @ckittipob/cpx add <component>\n` +
    `  npx @ckittipob/cpx tokens build [--tw3]\n`)
}

async function commandInit() {
  const appCss = join(cwd(), 'src', 'styles', 'app.css')
  const themeCss = join(cwd(), 'src', 'styles', 'cpx-theme.css')
  const tokensDir = join(cwd(), 'cpx-tokens')

  await mkdir(join(cwd(), 'src', 'styles'), { recursive: true })
  await mkdir(tokensDir, { recursive: true })

  if (!existsSync(appCss)) {
    await writeFile(appCss, `@import "tailwindcss";\n@import "./cpx-theme.css";\n`)
  }

  if (!existsSync(themeCss)) {
    await writeFile(themeCss, `/* Generated by CPX (default tokens). Replace via 'cpx tokens build'. */\n@import "@ckittipob/cpx/theme";\n`)
  }

  const manifest = join(tokensDir, 'manifest.placeholder.json')
  if (!existsSync(manifest)) {
    await writeFile(manifest, JSON.stringify({
      instructions: 'Place your exported Figma tokens JSON files here, then run: npx @ckittipob/cpx tokens build',
      examples: ['./examples/design-tokens']
    }, null, 2))
  }

  console.log('✅ Initialized styling. Imported tailwind + local cpx-theme.css')
}

async function commandAdd(name) {
  if (!name) {
    console.error('Please specify a component name, e.g. "button" or "input"')
    process.exit(1)
  }
  console.log(`→ Install the package: @ckittipob/cpx/react-${name}`)
  console.log(`Example usage: import { ${capitalize(name)} } from "@ckittipob/cpx/${name}"`)
}

async function commandTokensBuild() {
  const themeCss = join(cwd(), 'src', 'styles', 'cpx-theme.css')
  // For now, simply point to the default theme. Transformation will be added later.
  await mkdir(join(cwd(), 'src', 'styles'), { recursive: true })
  await writeFile(themeCss, `/* Generated by CPX using tokens. */\n@import "@ckittipob/cpx/theme";\n`)
  console.log('✅ Generated src/styles/cpx-theme.css from tokens (default stub).')
}

function capitalize(str) {
  return String(str).charAt(0).toUpperCase() + String(str).slice(1)
}

async function main() {
  const cmd = argv[2]
  if (!cmd || cmd === '--help' || cmd === '-h') return printHelp()

  if (cmd === 'init') return commandInit()
  if (cmd === 'add') return commandAdd(argv[3])
  if (cmd === 'tokens' && argv[3] === 'build') return commandTokensBuild()

  printHelp()
}

main().catch((err) => {
  console.error(err)
  process.exit(1)
})


